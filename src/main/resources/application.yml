server:
#  ssl:
#    enabled: true
#    key-store-password: ${KEY_PASSWORD}
#    key-store-type: PKCS12
#    key-store: C:\Users\user\Desktop\Back\javaTeamProject\src\main\resources\keyStore\test.p12
#    key-alias: test
#  port: 8443

spring:
  datasource:
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:1234}
    url: jdbc:mysql://15.164.52.112:3306/${DB_NAME:connect-db}
    driver-class-name: com.mysql.cj.jdbc.Driver
  security:
    oauth2:
      client:
        registration:
          instagram:
            client-name: instagram
            client-id: ${INSTAGRAM_CLIENT_ID:916068230372786}
            client-secret: ${INSTAGRAM_CLIENT_SECRET:22826d7371a23aec90c3dc9601fcc49b}
            client-authentication-method: client_secret_post
            scope:
              - user_profile
              - user_media
            redirect-uri: ${BASE_URI:https://15.164.52.112:8080}/login/oauth2/code/instagram
            authorization-grant-type: authorization_code
            provider: instagram
        provider:
          instagram:
            authorization-uri: https://api.instagram.com/oauth/authorize
            token-uri: https://api.instagram.com/oauth/access_token
            user-info-uri: https://graph.instagram.com/me?fields=id,username&access_token=
            user-name-attribute: username

  jpa:
    properties:
      hibernate:
        boot:
          allow_jdbc_metadata_access:false:
        ddl-auto: none


jwt:
  prefix: ${JWT_PREFIX:Bearer}
  header: ${JWT_HEADER:Authorization}
  secret: ${JWT_SECRET:whsrudgksmsrnralsdufjqnsfjenczndbrbucairk}
  expiration: ${JWT_EXPIRATION:86400000}

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY:asf}
      secret-key: ${S3_SECRET_KEY:asfs}
    region:
      static: ap-northeast-2
    s3:
      bucket: java-connect
